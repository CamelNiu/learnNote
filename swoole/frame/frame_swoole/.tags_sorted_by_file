App	frame\app\App.php	/^class App$/;"	c
index	frame\app\App.php	/^    public function index()$/;"	f
IndexController	frame\app\Http\Controller\IndexController.php	/^class IndexController$/;"	c
dd	frame\app\Http\Controller\IndexController.php	/^    public function dd()$/;"	f
StartListener	frame\app\Listener\StartListener.php	/^class StartListener extends Listener$/;"	c
cli	frame\app\Listener\StartListener.php	/^            $cli = new \\Swoole\\Coroutine\\Http\\Client('192.168.186.130', 9500);$/;"	v
data	frame\app\Listener\StartListener.php	/^                $data = [$/;"	v
handler	frame\app\Listener\StartListener.php	/^    public function handler()$/;"	f
name	frame\app\Listener\StartListener.php	/^    protected $name = 'start';$/;"	v
DemoController	frame\app\WebSocket\Controller\DemoController.php	/^class DemoController$/;"	c
close	frame\app\WebSocket\Controller\DemoController.php	/^    public function close($ser, $fd)$/;"	f
message	frame\app\WebSocket\Controller\DemoController.php	/^    public function message($server, $frame)$/;"	f
open	frame\app\WebSocket\Controller\DemoController.php	/^    public function open($server, $request)$/;"	f
IndexController	frame\app\WebSocket\Controller\IndexController.php	/^class IndexController$/;"	c
close	frame\app\WebSocket\Controller\IndexController.php	/^    public function close($ser, $fd)$/;"	f
message	frame\app\WebSocket\Controller\IndexController.php	/^    public function message($server, $frame)$/;"	f
open	frame\app\WebSocket\Controller\IndexController.php	/^    public function open($server, $request)$/;"	f
Index	frame\tests\index.php	/^class Index$/;"	c
demo	frame\tests\index.php	/^    public function demo()$/;"	f
get	frame\tests\index.php	/^    public function get()$/;"	f
ClassLoader	frame\vendor\composer\ClassLoader.php	/^class ClassLoader$/;"	c
add	frame\vendor\composer\ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	f
addClassMap	frame\vendor\composer\ClassLoader.php	/^    public function addClassMap(array $classMap)$/;"	f
addPsr4	frame\vendor\composer\ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	f
apcuPrefix	frame\vendor\composer\ClassLoader.php	/^        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;$/;"	v
apcuPrefix	frame\vendor\composer\ClassLoader.php	/^    private $apcuPrefix;$/;"	v
classMap	frame\vendor\composer\ClassLoader.php	/^            $this->classMap = $classMap;$/;"	v
classMap	frame\vendor\composer\ClassLoader.php	/^            $this->classMap = array_merge($this->classMap, $classMap);$/;"	v
classMap	frame\vendor\composer\ClassLoader.php	/^    private $classMap = array();$/;"	v
classMapAuthoritative	frame\vendor\composer\ClassLoader.php	/^        $this->classMapAuthoritative = $classMapAuthoritative;$/;"	v
classMapAuthoritative	frame\vendor\composer\ClassLoader.php	/^    private $classMapAuthoritative = false;$/;"	v
does	frame\vendor\composer\ClassLoader.php	/^            \/\/ Remember that this class does not exist.$/;"	c
fallbackDirsPsr0	frame\vendor\composer\ClassLoader.php	/^                $this->fallbackDirsPsr0 = array_merge($/;"	v
fallbackDirsPsr0	frame\vendor\composer\ClassLoader.php	/^            $this->fallbackDirsPsr0 = (array) $paths;$/;"	v
fallbackDirsPsr0	frame\vendor\composer\ClassLoader.php	/^    private $fallbackDirsPsr0 = array();$/;"	v
fallbackDirsPsr4	frame\vendor\composer\ClassLoader.php	/^                $this->fallbackDirsPsr4 = array_merge($/;"	v
fallbackDirsPsr4	frame\vendor\composer\ClassLoader.php	/^            $this->fallbackDirsPsr4 = (array) $paths;$/;"	v
fallbackDirsPsr4	frame\vendor\composer\ClassLoader.php	/^    private $fallbackDirsPsr4 = array();$/;"	v
file	frame\vendor\composer\ClassLoader.php	/^            $file = $this->findFileWithExtension($class, '.hh');$/;"	v
file	frame\vendor\composer\ClassLoader.php	/^            $file = apcu_fetch($this->apcuPrefix.$class, $hit);$/;"	v
file	frame\vendor\composer\ClassLoader.php	/^        $file = $this->findFileWithExtension($class, '.php');$/;"	v
file	frame\vendor\composer\ClassLoader.php	/^        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {$/;"	v
files	frame\vendor\composer\ClassLoader.php	/^     * Turns on searching the include path for class files.$/;"	c
findFile	frame\vendor\composer\ClassLoader.php	/^    public function findFile($class)$/;"	f
findFileWithExtension	frame\vendor\composer\ClassLoader.php	/^    private function findFileWithExtension($class, $ext)$/;"	f
first	frame\vendor\composer\ClassLoader.php	/^        $first = $class[0];$/;"	v
first	frame\vendor\composer\ClassLoader.php	/^        $first = $prefix[0];$/;"	v
getApcuPrefix	frame\vendor\composer\ClassLoader.php	/^    public function getApcuPrefix()$/;"	f
getClassMap	frame\vendor\composer\ClassLoader.php	/^    public function getClassMap()$/;"	f
getFallbackDirs	frame\vendor\composer\ClassLoader.php	/^    public function getFallbackDirs()$/;"	f
getFallbackDirsPsr4	frame\vendor\composer\ClassLoader.php	/^    public function getFallbackDirsPsr4()$/;"	f
getPrefixes	frame\vendor\composer\ClassLoader.php	/^    public function getPrefixes()$/;"	f
getPrefixesPsr4	frame\vendor\composer\ClassLoader.php	/^    public function getPrefixesPsr4()$/;"	f
getUseIncludePath	frame\vendor\composer\ClassLoader.php	/^    public function getUseIncludePath()$/;"	f
in	frame\vendor\composer\ClassLoader.php	/^ * In this example, if you try to use a class in the Symfony\\Component$/;"	c
includeFile	frame\vendor\composer\ClassLoader.php	/^function includeFile($file)$/;"	f
is	frame\vendor\composer\ClassLoader.php	/^     * Finds the path to the file where the class is defined.$/;"	c
is	frame\vendor\composer\ClassLoader.php	/^ * This class is loosely based on the Symfony UniversalClassLoader.$/;"	c
isClassMapAuthoritative	frame\vendor\composer\ClassLoader.php	/^    public function isClassMapAuthoritative()$/;"	f
lastPos	frame\vendor\composer\ClassLoader.php	/^            while (false !== $lastPos = strrpos($subPath, '\\\\')) {$/;"	v
length	frame\vendor\composer\ClassLoader.php	/^            $length = strlen($prefix);$/;"	v
loadClass	frame\vendor\composer\ClassLoader.php	/^    public function loadClass($class)$/;"	f
loader	frame\vendor\composer\ClassLoader.php	/^ *     $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	frame\vendor\composer\ClassLoader.php	/^ * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.$/;"	c
logicalPathPsr0	frame\vendor\composer\ClassLoader.php	/^            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logicalPathPsr0	frame\vendor\composer\ClassLoader.php	/^            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)$/;"	v
logicalPathPsr4	frame\vendor\composer\ClassLoader.php	/^        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;$/;"	v
lookup	frame\vendor\composer\ClassLoader.php	/^     * Should class lookup fail if not found in the current class map?$/;"	c
map	frame\vendor\composer\ClassLoader.php	/^        \/\/ class map lookup$/;"	c
map	frame\vendor\composer\ClassLoader.php	/^     * that have not been registered with the class map.$/;"	c
missingClasses	frame\vendor\composer\ClassLoader.php	/^    private $missingClasses = array();$/;"	v
name	frame\vendor\composer\ClassLoader.php	/^            \/\/ PEAR-like class name$/;"	c
name	frame\vendor\composer\ClassLoader.php	/^            \/\/ namespaced class name$/;"	c
or	frame\vendor\composer\ClassLoader.php	/^     * Loads the given class or interface.$/;"	c
pathEnd	frame\vendor\composer\ClassLoader.php	/^                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);$/;"	v
pos	frame\vendor\composer\ClassLoader.php	/^        if (false !== $pos = strrpos($class, '\\\\')) {$/;"	v
prefix	frame\vendor\composer\ClassLoader.php	/^            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {$/;"	v
prefixDirsPsr4	frame\vendor\composer\ClassLoader.php	/^    private $prefixDirsPsr4 = array();$/;"	v
prefixLengthsPsr4	frame\vendor\composer\ClassLoader.php	/^    private $prefixLengthsPsr4 = array();$/;"	v
prefixesPsr0	frame\vendor\composer\ClassLoader.php	/^    private $prefixesPsr0 = array();$/;"	v
prepend	frame\vendor\composer\ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	v
prepend	frame\vendor\composer\ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	v
register	frame\vendor\composer\ClassLoader.php	/^    public function register($prepend = false)$/;"	f
search	frame\vendor\composer\ClassLoader.php	/^                $search = $subPath . '\\\\';$/;"	v
set	frame\vendor\composer\ClassLoader.php	/^    public function set($prefix, $paths)$/;"	f
setApcuPrefix	frame\vendor\composer\ClassLoader.php	/^    public function setApcuPrefix($apcuPrefix)$/;"	f
setClassMapAuthoritative	frame\vendor\composer\ClassLoader.php	/^    public function setClassMapAuthoritative($classMapAuthoritative)$/;"	f
setPsr4	frame\vendor\composer\ClassLoader.php	/^    public function setPsr4($prefix, $paths)$/;"	f
setUseIncludePath	frame\vendor\composer\ClassLoader.php	/^    public function setUseIncludePath($useIncludePath)$/;"	f
subPath	frame\vendor\composer\ClassLoader.php	/^                $subPath = substr($subPath, 0, $lastPos);$/;"	v
subPath	frame\vendor\composer\ClassLoader.php	/^            $subPath = $class;$/;"	v
under	frame\vendor\composer\ClassLoader.php	/^ * the autoloader will first look for the class under the component\/$/;"	c
unregister	frame\vendor\composer\ClassLoader.php	/^    public function unregister()$/;"	f
useIncludePath	frame\vendor\composer\ClassLoader.php	/^        $this->useIncludePath = $useIncludePath;$/;"	v
useIncludePath	frame\vendor\composer\ClassLoader.php	/^    private $useIncludePath = false;$/;"	v
baseDir	frame\vendor\composer\autoload_classmap.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	frame\vendor\composer\autoload_classmap.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
baseDir	frame\vendor\composer\autoload_namespaces.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	frame\vendor\composer\autoload_namespaces.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
baseDir	frame\vendor\composer\autoload_psr4.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	frame\vendor\composer\autoload_psr4.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
ComposerAutoloaderInite15e0ab7d2876ca9af7583a419e24ee2	frame\vendor\composer\autoload_real.php	/^class ComposerAutoloaderInite15e0ab7d2876ca9af7583a419e24ee2$/;"	c
classMap	frame\vendor\composer\autoload_real.php	/^            $classMap = require __DIR__ . '\/autoload_classmap.php';$/;"	v
getLoader	frame\vendor\composer\autoload_real.php	/^    public static function getLoader()$/;"	f
loadClassLoader	frame\vendor\composer\autoload_real.php	/^    public static function loadClassLoader($class)$/;"	f
loader	frame\vendor\composer\autoload_real.php	/^        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	frame\vendor\composer\autoload_real.php	/^    private static $loader;$/;"	v
map	frame\vendor\composer\autoload_real.php	/^            $map = require __DIR__ . '\/autoload_namespaces.php';$/;"	v
map	frame\vendor\composer\autoload_real.php	/^            $map = require __DIR__ . '\/autoload_psr4.php';$/;"	v
namespace	frame\vendor\composer\autoload_real.php	/^            foreach ($map as $namespace => $path) {$/;"	v
useStaticLoader	frame\vendor\composer\autoload_real.php	/^        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());$/;"	v
ComposerStaticInite15e0ab7d2876ca9af7583a419e24ee2	frame\vendor\composer\autoload_static.php	/^class ComposerStaticInite15e0ab7d2876ca9af7583a419e24ee2$/;"	c
getInitializer	frame\vendor\composer\autoload_static.php	/^    public static function getInitializer(ClassLoader $loader)$/;"	f
prefixDirsPsr4	frame\vendor\composer\autoload_static.php	/^    public static $prefixDirsPsr4 = array ($/;"	v
prefixLengthsPsr4	frame\vendor\composer\autoload_static.php	/^    public static $prefixLengthsPsr4 = array ($/;"	v
Config	frame\vendor\shineyork\swostar\src\Config\Config.php	/^class Config$/;"	c
__construct	frame\vendor\shineyork\swostar\src\Config\Config.php	/^    function __construct()$/;"	f
configPath	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        $this->configPath = app()->getBasePath().'\/config';$/;"	v
configPath	frame\vendor\shineyork\swostar\src\Config\Config.php	/^    protected $configPath = '';$/;"	v
data	frame\vendor\shineyork\swostar\src\Config\Config.php	/^            $data = $data[$value];$/;"	v
data	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        $data = $this->itmes;$/;"	v
data	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        $data = null;$/;"	v
file	frame\vendor\shineyork\swostar\src\Config\Config.php	/^            if ($file === '.' || $file === '..') {$/;"	v
filename	frame\vendor\shineyork\swostar\src\Config\Config.php	/^            $filename = \\stristr($file, ".php", true);$/;"	v
files	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        $files = scandir($this->configPath);$/;"	v
get	frame\vendor\shineyork\swostar\src\Config\Config.php	/^    public function get($keys)$/;"	f
itmes	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        $this->itmes = $this->phpParser();$/;"	v
itmes	frame\vendor\shineyork\swostar\src\Config\Config.php	/^    protected $itmes = [];$/;"	v
key	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        foreach ($files as $key => $file) {$/;"	v
key	frame\vendor\shineyork\swostar\src\Config\Config.php	/^        foreach (\\explode('.', $keys) as $key => $value) {$/;"	v
phpParser	frame\vendor\shineyork\swostar\src\Config\Config.php	/^    protected function phpParser()$/;"	f
Input	frame\vendor\shineyork\swostar\src\Console\Input.php	/^class Input$/;"	c
description	frame\vendor\shineyork\swostar\src\Console\Input.php	/^    public static function info($message, $description = null)$/;"	v
info	frame\vendor\shineyork\swostar\src\Console\Input.php	/^    public static function info($message, $description = null)$/;"	f
return	frame\vendor\shineyork\swostar\src\Console\Input.php	/^            $return = $return.\\var_export($message, true);$/;"	v
return	frame\vendor\shineyork\swostar\src\Console\Input.php	/^        $return = "======>>> ".$description." start\\n";$/;"	v
Container	frame\vendor\shineyork\swostar\src\Container\Container.php	/^class Container$/;"	c
bind	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public function bind($abstract, $object)$/;"	f
bindings	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    protected $bindings = [];$/;"	v
getInstance	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public static function getInstance()$/;"	f
has	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public function has($abstract)$/;"	f
instance	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    protected static $instance;$/;"	v
instances	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    protected $instances = [];$/;"	v
make	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public function make($abstract, $parameters = [])$/;"	f
object	frame\vendor\shineyork\swostar\src\Container\Container.php	/^        $object = $this->bindings[$abstract];$/;"	v
parameters	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public function make($abstract, $parameters = [])$/;"	v
parameters	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public function resolve($abstract, $parameters = [])$/;"	v
resolve	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public function resolve($abstract, $parameters = [])$/;"	f
setInstance	frame\vendor\shineyork\swostar\src\Container\Container.php	/^    public static function setInstance($container = null)$/;"	f
Event	frame\vendor\shineyork\swostar\src\Event\Event.php	/^class Event$/;"	c
event	frame\vendor\shineyork\swostar\src\Event\Event.php	/^        $event = \\strtolower($event);$/;"	v
events	frame\vendor\shineyork\swostar\src\Event\Event.php	/^    protected $events = [];$/;"	v
getEvents	frame\vendor\shineyork\swostar\src\Event\Event.php	/^    public function getEvents($event = null)$/;"	f
param	frame\vendor\shineyork\swostar\src\Event\Event.php	/^    public function trigger($event, $param = [])$/;"	v
register	frame\vendor\shineyork\swostar\src\Event\Event.php	/^    public function register($event, $callback)$/;"	f
trigger	frame\vendor\shineyork\swostar\src\Event\Event.php	/^    public function trigger($event, $param = [])$/;"	f
Listener	frame\vendor\shineyork\swostar\src\Event\Listener.php	/^abstract class Listener$/;"	c
getName	frame\vendor\shineyork\swostar\src\Event\Listener.php	/^    public function getName()$/;"	f
handler	frame\vendor\shineyork\swostar\src\Event\Listener.php	/^    public abstract function handler();$/;"	f
name	frame\vendor\shineyork\swostar\src\Event\Listener.php	/^    protected $name = 'listener';$/;"	v
Application	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^class Application extends Container$/;"	c
__construct	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function __construct($path = null)$/;"	f
basePath	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $this->basePath = \\rtrim($path, '\\\/');$/;"	v
basePath	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    protected $basePath = "";$/;"	v
binds	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $binds = [$/;"	v
class	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^            $class = 'App\\\\Listener\\\\'.\\explode('.', $file)[0];$/;"	v
event	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $event = new Event();$/;"	v
file	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^            \/\/ $file => StartListener.php$/;"	v
file	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^            if ($file === '.' || $file === '..') {$/;"	v
files	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $files = scandir($this->getBasePath().'\/app\/Listener');$/;"	v
getBasePath	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function getBasePath()$/;"	f
init	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function init()$/;"	f
key	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        foreach ($binds as $key => $value) {$/;"	v
key	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        foreach ($files as $key => $file) {$/;"	v
listener	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^                $listener = new $class;$/;"	v
registerBaseBindings	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function registerBaseBindings()$/;"	f
registerEvent	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function registerEvent()$/;"	f
run	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function run($arg)$/;"	f
server	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^            $server = new HttpServer($this);$/;"	v
server	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^            $server = new WebSocketServer($this);$/;"	v
server	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $server = null;$/;"	v
setBasePath	frame\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function setBasePath($path)$/;"	f
Index	frame\vendor\shineyork\swostar\src\Index.php	/^class Index$/;"	c
index	frame\vendor\shineyork\swostar\src\Index.php	/^    public function index()$/;"	f
Request	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^class Request$/;"	c
get	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function get(){$/;"	f
getMethod	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function getMethod()$/;"	f
getUriPath	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function getUriPath()$/;"	f
init	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public static function init(SwooleRequest $request)$/;"	f
input	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function input(){$/;"	f
method	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    protected $method;$/;"	v
post	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function post(){$/;"	f
self	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^        $self = app('httpRequest');$/;"	v
swooleRequest	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    protected $swooleRequest;$/;"	v
uriPath	frame\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    protected $uriPath;$/;"	v
Rpc	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^class Rpc$/;"	c
__construct	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function __construct(Server $server, $config)$/;"	f
close	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function close($serv, $fd) {$/;"	f
connect	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function connect($serv, $fd){$/;"	f
host	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    protected $host ;$/;"	v
listen	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^        $listen = $server->listen($config['host'], $config['port'], SWOOLE_SOCK_TCP);$/;"	v
port	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    protected $port;$/;"	v
receive	frame\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function receive($serv, $fd, $from_id, $data) {$/;"	f
Route	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^class Route$/;"	c
__construct	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected function __construct( )$/;"	f
action	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^                $action = $value;$/;"	v
action	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        $action = null;$/;"	v
actions	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        $actions = [$/;"	v
addRoute	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected function addRoute($methods, $uri, $action)$/;"	f
any	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function any($uri, $action)$/;"	f
arr	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^            $arr = \\explode("@", $action);$/;"	v
class	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^            $class = new $controller();$/;"	v
controller	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^            $controller = $namespace.$arr[0];$/;"	v
flag	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^            $this->flag = $key;$/;"	v
flag	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        $this->flag = $flag;$/;"	v
flag	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $flag = null;$/;"	v
get	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function get($uri, $action)$/;"	f
getInstance	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public static function getInstance()$/;"	f
getRoutes	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function getRoutes()$/;"	f
instance	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected static $instance = null;$/;"	v
key	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        foreach ($actions as $key => $action) {$/;"	v
key	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        foreach ($this->routeMap as $key => $path) {$/;"	v
match	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function match($path, $param = [])$/;"	f
method	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        $this->method = $method;$/;"	v
method	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $method = null;$/;"	v
namespace	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^            $namespace = "\\App\\\\".$this->flag."\\Controller\\\\";$/;"	v
param	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    private function runAction($action, $param = null)$/;"	v
param	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function match($path, $param = [])$/;"	v
post	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function post($uri, $action)$/;"	f
registerRoute	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function registerRoute()$/;"	f
routeMap	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        $this->routeMap = [$/;"	v
routeMap	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $routeMap = [];$/;"	v
routes	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $routes = [];$/;"	v
runAction	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    private function runAction($action, $param = null)$/;"	f
setFlag	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function setFlag($flag)$/;"	f
setMethod	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function setMethod($method)$/;"	f
uri	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^            $uri = ($uri && substr($uri,0,1)!='\/') ? "\/".$uri : $uri;$/;"	v
uri	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^        foreach ($this->routes[$this->flag][$this->method] as $uri => $value) {$/;"	v
verbs	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $verbs = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'];$/;"	v
wsController	frame\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function wsController($uri, $controller)$/;"	f
HttpServer	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^class HttpServer extends Server$/;"	c
createServer	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^    public function createServer()$/;"	f
httpRequest	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $httpRequest = HttpRequest::init($request);$/;"	v
initEvent	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^    protected function initEvent(){$/;"	f
onRequest	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^    public function onRequest(SwooleRequest $request, SwooleResponse $response)$/;"	f
return	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $return = app('route')->setFlag('Http')->setMethod($httpRequest->getMethod())->match($httpRequest->getUriPath());$/;"	v
swooleServer	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $this->swooleServer = new SwooleServer($this->host, $this->port);$/;"	v
uri	frame\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $uri = $request->server['request_uri'];$/;"	v
Server	frame\vendor\shineyork\swostar\src\Server\Server.php	/^abstract class Server$/;"	c
__construct	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function __construct(Application $app )$/;"	f
action	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_CREATE';$/;"	v
action	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_DELETE';$/;"	v
action	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_MODIF';$/;"	v
action	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_MOVE';$/;"	v
action	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/ $action = 'file:';$/;"	v
app	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->app = $app;$/;"	v
app	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $app ;$/;"	v
cli	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        \/\/     $cli = new \\Swoole\\Coroutine\\Http\\Client('192.168.186.130', 9500);$/;"	v
config	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        $config = app('config');$/;"	v
config	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $config = [$/;"	v
createServer	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected abstract function createServer();$/;"	f
event	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            foreach ($events as $event => $func) {$/;"	v
event	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $event = [$/;"	v
getConfig	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function getConfig(): array$/;"	f
getHost	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function getHost(): string$/;"	f
getPort	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function getPort(): int$/;"	f
host	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->host = $config->get('http.host');$/;"	v
host	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $host = "0.0.0.0";$/;"	v
initEvent	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected abstract function initEvent();$/;"	f
initSetting	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function initSetting()$/;"	f
inotify	frame\vendor\shineyork\swostar\src\Server\Server.php	/^            $this->inotify = new Inotify($this->app->getBasePath(), $this->watchEvent());$/;"	v
inotify	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $inotify = null;$/;"	v
onManagerStart	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
pidFile	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $pidFile = "\/runtime\/swostar.pid";$/;"	v
pidMap	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $pidMap = [$/;"	v
port	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->port = $config->get('http.port');$/;"	v
port	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $port = 9000;$/;"	v
ret	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        \/\/     $ret = $cli->upgrade("\/");$/;"	v
setConfig	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function setConfig($config)$/;"	f
setEvent	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function setEvent($type, $event)$/;"	f
setSwooleEvent	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected function setSwooleEvent()$/;"	f
start	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function start()$/;"	f
swooleServer	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $swooleServer;$/;"	v
type	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchEvent	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected function watchEvent()$/;"	f
watchFile	frame\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->watchFile = $watchFile;$/;"	v
watchFile	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $watchFile = false;$/;"	v
watchFile	frame\vendor\shineyork\swostar\src\Server\Server.php	/^    public function watchFile($watchFile)$/;"	f
Server	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^abstract class Server$/;"	c
__construct	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function __construct(Application $app)$/;"	f
app	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->app = $app;$/;"	v
config	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $config = [$/;"	v
createServer	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected abstract function createServer();$/;"	f
event	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^            foreach ($events as $event => $func) {$/;"	v
event	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $event = [$/;"	v
getConfig	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getConfig(): array$/;"	f
getEvent	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getEvent(): array$/;"	f
getHost	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getHost(): string$/;"	f
getPort	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getPort(): int$/;"	f
getServerType	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getServerType()$/;"	f
host	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->host = $host;$/;"	v
host	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $host = '0.0.0.0';$/;"	v
initEvent	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected abstract function initEvent();$/;"	f
inotify	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $inotify = null;$/;"	v
mod	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $mod = SWOOLE_PROCESS;$/;"	v
onManagerStart	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
pidFile	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $pidFile = "\/runtime\/swostar.pid";$/;"	v
pidMap	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $pidMap = [$/;"	v
port	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->port = $port;$/;"	v
port	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $port = 9000;$/;"	v
serverType	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->serverType = $serverType;$/;"	v
serverType	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $serverType = 'TCP';$/;"	v
setConfig	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setConfig($config)$/;"	f
setEvent	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setEvent($type, $event)$/;"	f
setHost	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setHost($host)$/;"	f
setPort	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setPort($port)$/;"	f
setServerType	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setServerType($serverType)$/;"	f
setSwooleEvent	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected function setSwooleEvent()$/;"	f
setWatchFile	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setWatchFile($watch)$/;"	f
sock_type	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $sock_type = SWOOLE_SOCK_TCP;$/;"	v
start	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function start()$/;"	f
swooleServer	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $swooleServer;$/;"	v
type	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchEvent	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function watchEvent()$/;"	f
watchFile	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->watchFile = $watch;$/;"	v
watchFile	frame\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $watchFile = false;$/;"	v
Connections	frame\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^class Connections$/;"	c
connections	frame\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    protected static $connections = [];$/;"	v
del	frame\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    public static function del($fd)$/;"	f
get	frame\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    public static function get($fd)$/;"	f
init	frame\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    public static function init($fd, $path)$/;"	f
WebSocketServer	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^class WebSocketServer extends HttpServer$/;"	c
createServer	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function createServer()$/;"	f
initEvent	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    protected function initEvent(){$/;"	f
onClose	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onClose($ser, $fd) {$/;"	f
onMessage	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onMessage(SwooleServer $server, $frame) {$/;"	f
onOpen	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onOpen(SwooleServer $server, $request) {$/;"	f
path	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $path = (Connections::get($fd))['path'];$/;"	v
path	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $path = (Connections::get($frame->fd))['path'];$/;"	v
return	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('close')->match($path, [$server, $fd]);$/;"	v
return	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('message')->match($path, [$server, $frame]);$/;"	v
return	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('open')->match($request->server['path_info'], [$server, $request]);$/;"	v
swooleServer	frame\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $this->swooleServer = new SwooleServer($this->host, $this->port);$/;"	v
app	frame\vendor\shineyork\swostar\src\Supper\Helper.php	/^    function app($a = null)$/;"	f
dd	frame\vendor\shineyork\swostar\src\Supper\Helper.php	/^    function dd($message, $description = null)$/;"	f
description	frame\vendor\shineyork\swostar\src\Supper\Helper.php	/^    function dd($message, $description = null)$/;"	v
Inotify	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^class Inotify$/;"	c
__construct	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function __construct($watchPath, callable $watchHandler, $watchMask = IN_CREATE | IN_DELETE | IN_MODIFY | IN_MOVE)$/;"	f
__destruct	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function __destruct()$/;"	f
_watch	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function _watch($path)$/;"	f
addFileType	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function addFileType($type)$/;"	f
addFileTypes	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function addFileTypes(array $types)$/;"	f
bind	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function bind($wd, $path)$/;"	f
clearWatch	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function clearWatch()$/;"	f
doing	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                    $this->doing = false;$/;"	v
doing	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                $this->doing = true;$/;"	v
doing	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $doing        = false;$/;"	v
events	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^            $events = inotify_read($fp);$/;"	v
fd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->fd = inotify_init();$/;"	v
fd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $fd;$/;"	v
file	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                $file = $path . DIRECTORY_SEPARATOR . $file;$/;"	v
file	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                if ($file === '.' || $file === '..') {$/;"	v
fileType	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                $fileType = strchr($event['name'], '.');$/;"	v
fileTypes	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $fileTypes    = [$/;"	v
files	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^            $files = scandir($path);$/;"	v
getWatchedFileCount	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function getWatchedFileCount()$/;"	f
path	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function unbind($wd, $path = null)$/;"	v
pathWd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->pathWd = [];$/;"	v
pathWd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $pathWd       = [];$/;"	v
start	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function start()$/;"	f
stop	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function stop()$/;"	f
type	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $type = '.' . trim($type, '.');$/;"	v
unbind	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function unbind($wd, $path = null)$/;"	f
watch	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function watch()$/;"	f
watchHandler	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->watchHandler = $watchHandler;$/;"	v
watchHandler	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $watchHandler;$/;"	v
watchMask	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->watchMask = $watchMask;$/;"	v
watchMask	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $watchMask;$/;"	v
watchMask	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function __construct($watchPath, callable $watchHandler, $watchMask = IN_CREATE | IN_DELETE | IN_MODIFY | IN_MOVE)$/;"	v
watchPath	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->watchPath = $watchPath;$/;"	v
watchPath	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $watchPath;$/;"	v
wd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^            $wd = inotify_add_watch($this->fd, $path, $this->watchMask);$/;"	v
wd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $wd = inotify_add_watch($this->fd, $path, $this->watchMask);$/;"	v
wd	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        foreach ($this->wdPath as $wd => $path) {$/;"	v
wdPath	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->wdPath = [];$/;"	v
wdPath	frame\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $wdPath       = [];$/;"	v
Dispatcher	swocloud\src\Dispatcher.php	/^class Dispatcher$/;"	c
redis	swocloud\src\Dispatcher.php	/^        $redis = $route->getRedis();$/;"	v
register	swocloud\src\Dispatcher.php	/^    public function register(Route $route,SwooleServer $server, $fd, $data)$/;"	f
serverKey	swocloud\src\Dispatcher.php	/^        $serverKey = $route->getServerKey();$/;"	v
value	swocloud\src\Dispatcher.php	/^        $value = \\json_encode([$/;"	v
Route	swocloud\src\Route.php	/^class Route extends Server$/;"	c
createServer	swocloud\src\Route.php	/^    public function createServer()$/;"	f
data	swocloud\src\Route.php	/^        $data = \\json_decode($frame->data, true);$/;"	v
dispatcher	swocloud\src\Route.php	/^            $this->dispatcher = new Dispatcher;$/;"	v
dispatcher	swocloud\src\Route.php	/^    protected $dispatcher = null;$/;"	v
fd	swocloud\src\Route.php	/^        $fd = $frame->fd;$/;"	v
getDispatcher	swocloud\src\Route.php	/^    public function getDispatcher()$/;"	f
getRedis	swocloud\src\Route.php	/^    public function getRedis()$/;"	f
getServerKey	swocloud\src\Route.php	/^    public function getServerKey()$/;"	f
initEvent	swocloud\src\Route.php	/^    protected function initEvent(){$/;"	f
onClose	swocloud\src\Route.php	/^    public function onClose(SwooleServer $ser, $fd) {$/;"	f
onMessage	swocloud\src\Route.php	/^    public function onMessage(SwooleServer $server, $frame) {$/;"	f
onOpen	swocloud\src\Route.php	/^    public function onOpen(SwooleServer $server, $request) {$/;"	f
onRequest	swocloud\src\Route.php	/^    public function onRequest(SwooleRequest $request, SwooleResponse $response){$/;"	f
onWorkerStart	swocloud\src\Route.php	/^    public function onWorkerStart(SwooleServer $server, $worker_id)$/;"	f
redis	swocloud\src\Route.php	/^        $this->redis = new Redis;$/;"	v
redis	swocloud\src\Route.php	/^    protected $redis = null;$/;"	v
serverKey	swocloud\src\Route.php	/^    protected $serverKey = 'im_server';$/;"	v
swooleServer	swocloud\src\Route.php	/^        $this->swooleServer = new SwooleWebSocketServer($this->host, $this->port);$/;"	v
Server	swocloud\src\Server.php	/^abstract class Server$/;"	c
__construct	swocloud\src\Server.php	/^    public function __construct()$/;"	f
config	swocloud\src\Server.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	swocloud\src\Server.php	/^    protected $config = [$/;"	v
createServer	swocloud\src\Server.php	/^    protected abstract function createServer();$/;"	f
event	swocloud\src\Server.php	/^            foreach ($events as $event => $func) {$/;"	v
event	swocloud\src\Server.php	/^    protected $event = [$/;"	v
getConfig	swocloud\src\Server.php	/^    public function getConfig(): array$/;"	f
host	swocloud\src\Server.php	/^    protected $host = "0.0.0.0";$/;"	v
initEvent	swocloud\src\Server.php	/^    protected abstract function initEvent();$/;"	f
onManagerStart	swocloud\src\Server.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	swocloud\src\Server.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	swocloud\src\Server.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	swocloud\src\Server.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	swocloud\src\Server.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	swocloud\src\Server.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	swocloud\src\Server.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
port	swocloud\src\Server.php	/^    protected $port = 9500;$/;"	v
setConfig	swocloud\src\Server.php	/^    public function setConfig($config)$/;"	f
setEvent	swocloud\src\Server.php	/^    public function setEvent($type, $event)$/;"	f
setSwooleEvent	swocloud\src\Server.php	/^    protected function setSwooleEvent()$/;"	f
start	swocloud\src\Server.php	/^    public function start()$/;"	f
swooleServer	swocloud\src\Server.php	/^    protected $swooleServer;$/;"	v
type	swocloud\src\Server.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchFile	swocloud\src\Server.php	/^        $this->watchFile = $watchFile;$/;"	v
watchFile	swocloud\src\Server.php	/^    protected $watchFile = false;$/;"	v
watchFile	swocloud\src\Server.php	/^    public function watchFile($watchFile)$/;"	f
SwoCloud	swocloud\src\SwoCloud.php	/^class SwoCloud$/;"	c
run	swocloud\src\SwoCloud.php	/^    public function run()$/;"	f
ClassLoader	swocloud\vendor\composer\ClassLoader.php	/^class ClassLoader$/;"	c
add	swocloud\vendor\composer\ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	f
addClassMap	swocloud\vendor\composer\ClassLoader.php	/^    public function addClassMap(array $classMap)$/;"	f
addPsr4	swocloud\vendor\composer\ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	f
apcuPrefix	swocloud\vendor\composer\ClassLoader.php	/^        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;$/;"	v
apcuPrefix	swocloud\vendor\composer\ClassLoader.php	/^    private $apcuPrefix;$/;"	v
classMap	swocloud\vendor\composer\ClassLoader.php	/^            $this->classMap = $classMap;$/;"	v
classMap	swocloud\vendor\composer\ClassLoader.php	/^            $this->classMap = array_merge($this->classMap, $classMap);$/;"	v
classMap	swocloud\vendor\composer\ClassLoader.php	/^    private $classMap = array();$/;"	v
classMapAuthoritative	swocloud\vendor\composer\ClassLoader.php	/^        $this->classMapAuthoritative = $classMapAuthoritative;$/;"	v
classMapAuthoritative	swocloud\vendor\composer\ClassLoader.php	/^    private $classMapAuthoritative = false;$/;"	v
does	swocloud\vendor\composer\ClassLoader.php	/^            \/\/ Remember that this class does not exist.$/;"	c
fallbackDirsPsr0	swocloud\vendor\composer\ClassLoader.php	/^                $this->fallbackDirsPsr0 = array_merge($/;"	v
fallbackDirsPsr0	swocloud\vendor\composer\ClassLoader.php	/^            $this->fallbackDirsPsr0 = (array) $paths;$/;"	v
fallbackDirsPsr0	swocloud\vendor\composer\ClassLoader.php	/^    private $fallbackDirsPsr0 = array();$/;"	v
fallbackDirsPsr4	swocloud\vendor\composer\ClassLoader.php	/^                $this->fallbackDirsPsr4 = array_merge($/;"	v
fallbackDirsPsr4	swocloud\vendor\composer\ClassLoader.php	/^            $this->fallbackDirsPsr4 = (array) $paths;$/;"	v
fallbackDirsPsr4	swocloud\vendor\composer\ClassLoader.php	/^    private $fallbackDirsPsr4 = array();$/;"	v
file	swocloud\vendor\composer\ClassLoader.php	/^            $file = $this->findFileWithExtension($class, '.hh');$/;"	v
file	swocloud\vendor\composer\ClassLoader.php	/^            $file = apcu_fetch($this->apcuPrefix.$class, $hit);$/;"	v
file	swocloud\vendor\composer\ClassLoader.php	/^        $file = $this->findFileWithExtension($class, '.php');$/;"	v
file	swocloud\vendor\composer\ClassLoader.php	/^        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {$/;"	v
files	swocloud\vendor\composer\ClassLoader.php	/^     * Turns on searching the include path for class files.$/;"	c
findFile	swocloud\vendor\composer\ClassLoader.php	/^    public function findFile($class)$/;"	f
findFileWithExtension	swocloud\vendor\composer\ClassLoader.php	/^    private function findFileWithExtension($class, $ext)$/;"	f
first	swocloud\vendor\composer\ClassLoader.php	/^        $first = $class[0];$/;"	v
first	swocloud\vendor\composer\ClassLoader.php	/^        $first = $prefix[0];$/;"	v
getApcuPrefix	swocloud\vendor\composer\ClassLoader.php	/^    public function getApcuPrefix()$/;"	f
getClassMap	swocloud\vendor\composer\ClassLoader.php	/^    public function getClassMap()$/;"	f
getFallbackDirs	swocloud\vendor\composer\ClassLoader.php	/^    public function getFallbackDirs()$/;"	f
getFallbackDirsPsr4	swocloud\vendor\composer\ClassLoader.php	/^    public function getFallbackDirsPsr4()$/;"	f
getPrefixes	swocloud\vendor\composer\ClassLoader.php	/^    public function getPrefixes()$/;"	f
getPrefixesPsr4	swocloud\vendor\composer\ClassLoader.php	/^    public function getPrefixesPsr4()$/;"	f
getUseIncludePath	swocloud\vendor\composer\ClassLoader.php	/^    public function getUseIncludePath()$/;"	f
in	swocloud\vendor\composer\ClassLoader.php	/^ * In this example, if you try to use a class in the Symfony\\Component$/;"	c
includeFile	swocloud\vendor\composer\ClassLoader.php	/^function includeFile($file)$/;"	f
is	swocloud\vendor\composer\ClassLoader.php	/^     * Finds the path to the file where the class is defined.$/;"	c
is	swocloud\vendor\composer\ClassLoader.php	/^ * This class is loosely based on the Symfony UniversalClassLoader.$/;"	c
isClassMapAuthoritative	swocloud\vendor\composer\ClassLoader.php	/^    public function isClassMapAuthoritative()$/;"	f
lastPos	swocloud\vendor\composer\ClassLoader.php	/^            while (false !== $lastPos = strrpos($subPath, '\\\\')) {$/;"	v
length	swocloud\vendor\composer\ClassLoader.php	/^            $length = strlen($prefix);$/;"	v
loadClass	swocloud\vendor\composer\ClassLoader.php	/^    public function loadClass($class)$/;"	f
loader	swocloud\vendor\composer\ClassLoader.php	/^ *     $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	swocloud\vendor\composer\ClassLoader.php	/^ * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.$/;"	c
logicalPathPsr0	swocloud\vendor\composer\ClassLoader.php	/^            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;$/;"	v
logicalPathPsr0	swocloud\vendor\composer\ClassLoader.php	/^            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)$/;"	v
logicalPathPsr4	swocloud\vendor\composer\ClassLoader.php	/^        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;$/;"	v
lookup	swocloud\vendor\composer\ClassLoader.php	/^     * Should class lookup fail if not found in the current class map?$/;"	c
map	swocloud\vendor\composer\ClassLoader.php	/^        \/\/ class map lookup$/;"	c
map	swocloud\vendor\composer\ClassLoader.php	/^     * that have not been registered with the class map.$/;"	c
missingClasses	swocloud\vendor\composer\ClassLoader.php	/^    private $missingClasses = array();$/;"	v
name	swocloud\vendor\composer\ClassLoader.php	/^            \/\/ PEAR-like class name$/;"	c
name	swocloud\vendor\composer\ClassLoader.php	/^            \/\/ namespaced class name$/;"	c
or	swocloud\vendor\composer\ClassLoader.php	/^     * Loads the given class or interface.$/;"	c
pathEnd	swocloud\vendor\composer\ClassLoader.php	/^                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);$/;"	v
pos	swocloud\vendor\composer\ClassLoader.php	/^        if (false !== $pos = strrpos($class, '\\\\')) {$/;"	v
prefix	swocloud\vendor\composer\ClassLoader.php	/^            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {$/;"	v
prefixDirsPsr4	swocloud\vendor\composer\ClassLoader.php	/^    private $prefixDirsPsr4 = array();$/;"	v
prefixLengthsPsr4	swocloud\vendor\composer\ClassLoader.php	/^    private $prefixLengthsPsr4 = array();$/;"	v
prefixesPsr0	swocloud\vendor\composer\ClassLoader.php	/^    private $prefixesPsr0 = array();$/;"	v
prepend	swocloud\vendor\composer\ClassLoader.php	/^    public function add($prefix, $paths, $prepend = false)$/;"	v
prepend	swocloud\vendor\composer\ClassLoader.php	/^    public function addPsr4($prefix, $paths, $prepend = false)$/;"	v
register	swocloud\vendor\composer\ClassLoader.php	/^    public function register($prepend = false)$/;"	f
search	swocloud\vendor\composer\ClassLoader.php	/^                $search = $subPath . '\\\\';$/;"	v
set	swocloud\vendor\composer\ClassLoader.php	/^    public function set($prefix, $paths)$/;"	f
setApcuPrefix	swocloud\vendor\composer\ClassLoader.php	/^    public function setApcuPrefix($apcuPrefix)$/;"	f
setClassMapAuthoritative	swocloud\vendor\composer\ClassLoader.php	/^    public function setClassMapAuthoritative($classMapAuthoritative)$/;"	f
setPsr4	swocloud\vendor\composer\ClassLoader.php	/^    public function setPsr4($prefix, $paths)$/;"	f
setUseIncludePath	swocloud\vendor\composer\ClassLoader.php	/^    public function setUseIncludePath($useIncludePath)$/;"	f
subPath	swocloud\vendor\composer\ClassLoader.php	/^                $subPath = substr($subPath, 0, $lastPos);$/;"	v
subPath	swocloud\vendor\composer\ClassLoader.php	/^            $subPath = $class;$/;"	v
under	swocloud\vendor\composer\ClassLoader.php	/^ * the autoloader will first look for the class under the component\/$/;"	c
unregister	swocloud\vendor\composer\ClassLoader.php	/^    public function unregister()$/;"	f
useIncludePath	swocloud\vendor\composer\ClassLoader.php	/^        $this->useIncludePath = $useIncludePath;$/;"	v
useIncludePath	swocloud\vendor\composer\ClassLoader.php	/^    private $useIncludePath = false;$/;"	v
baseDir	swocloud\vendor\composer\autoload_classmap.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	swocloud\vendor\composer\autoload_classmap.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
baseDir	swocloud\vendor\composer\autoload_files.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	swocloud\vendor\composer\autoload_files.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
baseDir	swocloud\vendor\composer\autoload_namespaces.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	swocloud\vendor\composer\autoload_namespaces.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
baseDir	swocloud\vendor\composer\autoload_psr4.php	/^$baseDir = dirname($vendorDir);$/;"	v
vendorDir	swocloud\vendor\composer\autoload_psr4.php	/^$vendorDir = dirname(dirname(__FILE__));$/;"	v
ComposerAutoloaderInitaa25c8d0ced7542ab0964733c05d9a33	swocloud\vendor\composer\autoload_real.php	/^class ComposerAutoloaderInitaa25c8d0ced7542ab0964733c05d9a33$/;"	c
classMap	swocloud\vendor\composer\autoload_real.php	/^            $classMap = require __DIR__ . '\/autoload_classmap.php';$/;"	v
composerRequireaa25c8d0ced7542ab0964733c05d9a33	swocloud\vendor\composer\autoload_real.php	/^function composerRequireaa25c8d0ced7542ab0964733c05d9a33($fileIdentifier, $file)$/;"	f
fileIdentifier	swocloud\vendor\composer\autoload_real.php	/^        foreach ($includeFiles as $fileIdentifier => $file) {$/;"	v
getLoader	swocloud\vendor\composer\autoload_real.php	/^    public static function getLoader()$/;"	f
includeFiles	swocloud\vendor\composer\autoload_real.php	/^            $includeFiles = Composer\\Autoload\\ComposerStaticInitaa25c8d0ced7542ab0964733c05d9a33::$files;$/;"	v
includeFiles	swocloud\vendor\composer\autoload_real.php	/^            $includeFiles = require __DIR__ . '\/autoload_files.php';$/;"	v
loadClassLoader	swocloud\vendor\composer\autoload_real.php	/^    public static function loadClassLoader($class)$/;"	f
loader	swocloud\vendor\composer\autoload_real.php	/^        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader();$/;"	v
loader	swocloud\vendor\composer\autoload_real.php	/^    private static $loader;$/;"	v
map	swocloud\vendor\composer\autoload_real.php	/^            $map = require __DIR__ . '\/autoload_namespaces.php';$/;"	v
map	swocloud\vendor\composer\autoload_real.php	/^            $map = require __DIR__ . '\/autoload_psr4.php';$/;"	v
namespace	swocloud\vendor\composer\autoload_real.php	/^            foreach ($map as $namespace => $path) {$/;"	v
useStaticLoader	swocloud\vendor\composer\autoload_real.php	/^        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());$/;"	v
ComposerStaticInitaa25c8d0ced7542ab0964733c05d9a33	swocloud\vendor\composer\autoload_static.php	/^class ComposerStaticInitaa25c8d0ced7542ab0964733c05d9a33$/;"	c
files	swocloud\vendor\composer\autoload_static.php	/^    public static $files = array ($/;"	v
getInitializer	swocloud\vendor\composer\autoload_static.php	/^    public static function getInitializer(ClassLoader $loader)$/;"	f
prefixDirsPsr4	swocloud\vendor\composer\autoload_static.php	/^    public static $prefixDirsPsr4 = array ($/;"	v
prefixLengthsPsr4	swocloud\vendor\composer\autoload_static.php	/^    public static $prefixLengthsPsr4 = array ($/;"	v
Config	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^class Config$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^    function __construct()$/;"	f
configPath	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        $this->configPath = app()->getBasePath().'\/config';$/;"	v
configPath	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^    protected $configPath = '';$/;"	v
data	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^            $data = $data[$value];$/;"	v
data	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        $data = $this->itmes;$/;"	v
data	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        $data = null;$/;"	v
file	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^            if ($file === '.' || $file === '..') {$/;"	v
filename	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^            $filename = \\stristr($file, ".php", true);$/;"	v
files	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        $files = scandir($this->configPath);$/;"	v
get	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^    public function get($keys)$/;"	f
itmes	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        $this->itmes = $this->phpParser();$/;"	v
itmes	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^    protected $itmes = [];$/;"	v
key	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        foreach ($files as $key => $file) {$/;"	v
key	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^        foreach (\\explode('.', $keys) as $key => $value) {$/;"	v
phpParser	swocloud\vendor\shineyork\swostar\src\Config\Config.php	/^    protected function phpParser()$/;"	f
Input	swocloud\vendor\shineyork\swostar\src\Console\Input.php	/^class Input$/;"	c
description	swocloud\vendor\shineyork\swostar\src\Console\Input.php	/^    public static function info($message, $description = null)$/;"	v
info	swocloud\vendor\shineyork\swostar\src\Console\Input.php	/^    public static function info($message, $description = null)$/;"	f
return	swocloud\vendor\shineyork\swostar\src\Console\Input.php	/^            $return = $return.\\var_export($message, true);$/;"	v
return	swocloud\vendor\shineyork\swostar\src\Console\Input.php	/^        $return = "======>>> ".$description." start\\n";$/;"	v
Container	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^class Container$/;"	c
bind	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public function bind($abstract, $object)$/;"	f
bindings	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    protected $bindings = [];$/;"	v
getInstance	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public static function getInstance()$/;"	f
has	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public function has($abstract)$/;"	f
instance	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    protected static $instance;$/;"	v
instances	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    protected $instances = [];$/;"	v
make	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public function make($abstract, $parameters = [])$/;"	f
object	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^        $object = $this->bindings[$abstract];$/;"	v
parameters	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public function make($abstract, $parameters = [])$/;"	v
parameters	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public function resolve($abstract, $parameters = [])$/;"	v
resolve	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public function resolve($abstract, $parameters = [])$/;"	f
setInstance	swocloud\vendor\shineyork\swostar\src\Container\Container.php	/^    public static function setInstance($container = null)$/;"	f
Event	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^class Event$/;"	c
event	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^        $event = \\strtolower($event);$/;"	v
events	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^    protected $events = [];$/;"	v
getEvents	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^    public function getEvents($event = null)$/;"	f
param	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^    public function trigger($event, $param = [])$/;"	v
register	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^    public function register($event, $callback)$/;"	f
trigger	swocloud\vendor\shineyork\swostar\src\Event\Event.php	/^    public function trigger($event, $param = [])$/;"	f
Listener	swocloud\vendor\shineyork\swostar\src\Event\Listener.php	/^abstract class Listener$/;"	c
getName	swocloud\vendor\shineyork\swostar\src\Event\Listener.php	/^    public function getName()$/;"	f
handler	swocloud\vendor\shineyork\swostar\src\Event\Listener.php	/^    public abstract function handler();$/;"	f
name	swocloud\vendor\shineyork\swostar\src\Event\Listener.php	/^    protected $name = 'listener';$/;"	v
Application	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^class Application extends Container$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function __construct($path = null)$/;"	f
basePath	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $this->basePath = \\rtrim($path, '\\\/');$/;"	v
basePath	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    protected $basePath = "";$/;"	v
binds	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $binds = [$/;"	v
class	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^            $class = 'App\\\\Listener\\\\'.\\explode('.', $file)[0];$/;"	v
event	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $event = new Event();$/;"	v
file	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^            \/\/ $file => StartListener.php$/;"	v
file	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^            if ($file === '.' || $file === '..') {$/;"	v
files	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $files = scandir($this->getBasePath().'\/app\/Listener');$/;"	v
getBasePath	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function getBasePath()$/;"	f
init	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function init()$/;"	f
key	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        foreach ($binds as $key => $value) {$/;"	v
key	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        foreach ($files as $key => $file) {$/;"	v
listener	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^                $listener = new $class;$/;"	v
registerBaseBindings	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function registerBaseBindings()$/;"	f
registerEvent	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function registerEvent()$/;"	f
run	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function run($arg)$/;"	f
server	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^            $server = new HttpServer($this);$/;"	v
server	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^            $server = new WebSocketServer($this);$/;"	v
server	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^        $server = null;$/;"	v
setBasePath	swocloud\vendor\shineyork\swostar\src\Foundation\Application.php	/^    public function setBasePath($path)$/;"	f
Index	swocloud\vendor\shineyork\swostar\src\Index.php	/^class Index$/;"	c
index	swocloud\vendor\shineyork\swostar\src\Index.php	/^    public function index()$/;"	f
Request	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^class Request$/;"	c
get	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function get(){$/;"	f
getMethod	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function getMethod()$/;"	f
getUriPath	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function getUriPath()$/;"	f
init	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public static function init(SwooleRequest $request)$/;"	f
input	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function input(){$/;"	f
method	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    protected $method;$/;"	v
post	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    public function post(){$/;"	f
self	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^        $self = app('httpRequest');$/;"	v
swooleRequest	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    protected $swooleRequest;$/;"	v
uriPath	swocloud\vendor\shineyork\swostar\src\Message\Http\Request.php	/^    protected $uriPath;$/;"	v
Rpc	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^class Rpc$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function __construct(Server $server, $config)$/;"	f
close	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function close($serv, $fd) {$/;"	f
connect	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function connect($serv, $fd){$/;"	f
host	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    protected $host ;$/;"	v
listen	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^        $listen = $server->listen($config['host'], $config['port'], SWOOLE_SOCK_TCP);$/;"	v
port	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    protected $port;$/;"	v
receive	swocloud\vendor\shineyork\swostar\src\RPC\Rpc.php	/^    public function receive($serv, $fd, $from_id, $data) {$/;"	f
Route	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^class Route$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected function __construct( )$/;"	f
action	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^                $action = $value;$/;"	v
action	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        $action = null;$/;"	v
actions	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        $actions = [$/;"	v
addRoute	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected function addRoute($methods, $uri, $action)$/;"	f
any	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function any($uri, $action)$/;"	f
arr	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^            $arr = \\explode("@", $action);$/;"	v
class	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^            $class = new $controller();$/;"	v
controller	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^            $controller = $namespace.$arr[0];$/;"	v
flag	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^            $this->flag = $key;$/;"	v
flag	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        $this->flag = $flag;$/;"	v
flag	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $flag = null;$/;"	v
get	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function get($uri, $action)$/;"	f
getInstance	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public static function getInstance()$/;"	f
getRoutes	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function getRoutes()$/;"	f
instance	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected static $instance = null;$/;"	v
key	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        foreach ($actions as $key => $action) {$/;"	v
key	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        foreach ($this->routeMap as $key => $path) {$/;"	v
match	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function match($path, $param = [])$/;"	f
method	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        $this->method = $method;$/;"	v
method	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $method = null;$/;"	v
namespace	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^            $namespace = "\\App\\\\".$this->flag."\\Controller\\\\";$/;"	v
param	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    private function runAction($action, $param = null)$/;"	v
param	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function match($path, $param = [])$/;"	v
post	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function post($uri, $action)$/;"	f
registerRoute	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function registerRoute()$/;"	f
routeMap	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        $this->routeMap = [$/;"	v
routeMap	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $routeMap = [];$/;"	v
routes	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $routes = [];$/;"	v
runAction	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    private function runAction($action, $param = null)$/;"	f
setFlag	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function setFlag($flag)$/;"	f
setMethod	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function setMethod($method)$/;"	f
uri	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^            $uri = ($uri && substr($uri,0,1)!='\/') ? "\/".$uri : $uri;$/;"	v
uri	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^        foreach ($this->routes[$this->flag][$this->method] as $uri => $value) {$/;"	v
verbs	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    protected $verbs = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'];$/;"	v
wsController	swocloud\vendor\shineyork\swostar\src\Routes\Route.php	/^    public function wsController($uri, $controller)$/;"	f
HttpServer	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^class HttpServer extends Server$/;"	c
createServer	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^    public function createServer()$/;"	f
httpRequest	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $httpRequest = HttpRequest::init($request);$/;"	v
initEvent	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^    protected function initEvent(){$/;"	f
onRequest	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^    public function onRequest(SwooleRequest $request, SwooleResponse $response)$/;"	f
return	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $return = app('route')->setFlag('Http')->setMethod($httpRequest->getMethod())->match($httpRequest->getUriPath());$/;"	v
swooleServer	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $this->swooleServer = new SwooleServer($this->host, $this->port);$/;"	v
uri	swocloud\vendor\shineyork\swostar\src\Server\Http\HttpServer.php	/^        $uri = $request->server['request_uri'];$/;"	v
Server	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^abstract class Server$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function __construct(Application $app )$/;"	f
action	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_CREATE';$/;"	v
action	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_DELETE';$/;"	v
action	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_MODIF';$/;"	v
action	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_MOVE';$/;"	v
action	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            \/\/ $action = 'file:';$/;"	v
app	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->app = $app;$/;"	v
app	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $app ;$/;"	v
cli	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        \/\/     $cli = new \\Swoole\\Coroutine\\Http\\Client('192.168.186.130', 9500);$/;"	v
config	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        $config = app('config');$/;"	v
config	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $config = [$/;"	v
createServer	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected abstract function createServer();$/;"	f
event	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            foreach ($events as $event => $func) {$/;"	v
event	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $event = [$/;"	v
getConfig	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function getConfig(): array$/;"	f
getHost	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function getHost(): string$/;"	f
getPort	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function getPort(): int$/;"	f
host	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->host = $config->get('http.host');$/;"	v
host	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $host = "0.0.0.0";$/;"	v
initEvent	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected abstract function initEvent();$/;"	f
initSetting	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function initSetting()$/;"	f
inotify	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^            $this->inotify = new Inotify($this->app->getBasePath(), $this->watchEvent());$/;"	v
inotify	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $inotify = null;$/;"	v
onManagerStart	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
pidFile	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $pidFile = "\/runtime\/swostar.pid";$/;"	v
pidMap	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $pidMap = [$/;"	v
port	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->port = $config->get('http.port');$/;"	v
port	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $port = 9000;$/;"	v
ret	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        \/\/     $ret = $cli->upgrade("\/");$/;"	v
setConfig	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function setConfig($config)$/;"	f
setEvent	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function setEvent($type, $event)$/;"	f
setSwooleEvent	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected function setSwooleEvent()$/;"	f
start	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function start()$/;"	f
swooleServer	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $swooleServer;$/;"	v
type	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchEvent	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected function watchEvent()$/;"	f
watchFile	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^        $this->watchFile = $watchFile;$/;"	v
watchFile	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    protected $watchFile = false;$/;"	v
watchFile	swocloud\vendor\shineyork\swostar\src\Server\Server.php	/^    public function watchFile($watchFile)$/;"	f
Server	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^abstract class Server$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function __construct(Application $app)$/;"	f
app	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->app = $app;$/;"	v
config	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $config = [$/;"	v
createServer	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected abstract function createServer();$/;"	f
event	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^            foreach ($events as $event => $func) {$/;"	v
event	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $event = [$/;"	v
getConfig	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getConfig(): array$/;"	f
getEvent	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getEvent(): array$/;"	f
getHost	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getHost(): string$/;"	f
getPort	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getPort(): int$/;"	f
getServerType	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function getServerType()$/;"	f
host	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->host = $host;$/;"	v
host	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $host = '0.0.0.0';$/;"	v
initEvent	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected abstract function initEvent();$/;"	f
inotify	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $inotify = null;$/;"	v
mod	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $mod = SWOOLE_PROCESS;$/;"	v
onManagerStart	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
pidFile	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $pidFile = "\/runtime\/swostar.pid";$/;"	v
pidMap	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $pidMap = [$/;"	v
port	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->port = $port;$/;"	v
port	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $port = 9000;$/;"	v
serverType	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->serverType = $serverType;$/;"	v
serverType	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $serverType = 'TCP';$/;"	v
setConfig	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setConfig($config)$/;"	f
setEvent	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setEvent($type, $event)$/;"	f
setHost	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setHost($host)$/;"	f
setPort	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setPort($port)$/;"	f
setServerType	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setServerType($serverType)$/;"	f
setSwooleEvent	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected function setSwooleEvent()$/;"	f
setWatchFile	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function setWatchFile($watch)$/;"	f
sock_type	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $sock_type = SWOOLE_SOCK_TCP;$/;"	v
start	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function start()$/;"	f
swooleServer	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $swooleServer;$/;"	v
type	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchEvent	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    public function watchEvent()$/;"	f
watchFile	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^        $this->watchFile = $watch;$/;"	v
watchFile	swocloud\vendor\shineyork\swostar\src\Server\Server1.php	/^    protected $watchFile = false;$/;"	v
Connections	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^class Connections$/;"	c
connections	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    protected static $connections = [];$/;"	v
del	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    public static function del($fd)$/;"	f
get	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    public static function get($fd)$/;"	f
init	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\Connections.php	/^    public static function init($fd, $path)$/;"	f
WebSocketServer	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^class WebSocketServer extends HttpServer$/;"	c
createServer	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function createServer()$/;"	f
initEvent	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    protected function initEvent(){$/;"	f
onClose	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onClose($ser, $fd) {$/;"	f
onMessage	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onMessage(SwooleServer $server, $frame) {$/;"	f
onOpen	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onOpen(SwooleServer $server, $request) {$/;"	f
path	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $path = (Connections::get($fd))['path'];$/;"	v
path	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $path = (Connections::get($frame->fd))['path'];$/;"	v
return	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('close')->match($path, [$server, $fd]);$/;"	v
return	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('message')->match($path, [$server, $frame]);$/;"	v
return	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('open')->match($request->server['path_info'], [$server, $request]);$/;"	v
swooleServer	swocloud\vendor\shineyork\swostar\src\Server\WebSocket\WebSocketServer.php	/^        $this->swooleServer = new SwooleServer($this->host, $this->port);$/;"	v
app	swocloud\vendor\shineyork\swostar\src\Supper\Helper.php	/^    function app($a = null)$/;"	f
dd	swocloud\vendor\shineyork\swostar\src\Supper\Helper.php	/^    function dd($message, $description = null)$/;"	f
description	swocloud\vendor\shineyork\swostar\src\Supper\Helper.php	/^    function dd($message, $description = null)$/;"	v
Inotify	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^class Inotify$/;"	c
__construct	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function __construct($watchPath, callable $watchHandler, $watchMask = IN_CREATE | IN_DELETE | IN_MODIFY | IN_MOVE)$/;"	f
__destruct	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function __destruct()$/;"	f
_watch	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function _watch($path)$/;"	f
addFileType	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function addFileType($type)$/;"	f
addFileTypes	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function addFileTypes(array $types)$/;"	f
bind	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function bind($wd, $path)$/;"	f
clearWatch	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function clearWatch()$/;"	f
doing	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                    $this->doing = false;$/;"	v
doing	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                $this->doing = true;$/;"	v
doing	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $doing        = false;$/;"	v
events	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^            $events = inotify_read($fp);$/;"	v
fd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->fd = inotify_init();$/;"	v
fd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $fd;$/;"	v
file	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                $file = $path . DIRECTORY_SEPARATOR . $file;$/;"	v
file	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                if ($file === '.' || $file === '..') {$/;"	v
fileType	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^                $fileType = strchr($event['name'], '.');$/;"	v
fileTypes	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $fileTypes    = [$/;"	v
files	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^            $files = scandir($path);$/;"	v
getWatchedFileCount	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function getWatchedFileCount()$/;"	f
path	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function unbind($wd, $path = null)$/;"	v
pathWd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->pathWd = [];$/;"	v
pathWd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $pathWd       = [];$/;"	v
start	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function start()$/;"	f
stop	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function stop()$/;"	f
type	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $type = '.' . trim($type, '.');$/;"	v
unbind	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    protected function unbind($wd, $path = null)$/;"	f
watch	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function watch()$/;"	f
watchHandler	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->watchHandler = $watchHandler;$/;"	v
watchHandler	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $watchHandler;$/;"	v
watchMask	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->watchMask = $watchMask;$/;"	v
watchMask	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $watchMask;$/;"	v
watchMask	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    public function __construct($watchPath, callable $watchHandler, $watchMask = IN_CREATE | IN_DELETE | IN_MODIFY | IN_MOVE)$/;"	v
watchPath	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->watchPath = $watchPath;$/;"	v
watchPath	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $watchPath;$/;"	v
wd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^            $wd = inotify_add_watch($this->fd, $path, $this->watchMask);$/;"	v
wd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $wd = inotify_add_watch($this->fd, $path, $this->watchMask);$/;"	v
wd	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        foreach ($this->wdPath as $wd => $path) {$/;"	v
wdPath	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^        $this->wdPath = [];$/;"	v
wdPath	swocloud\vendor\shineyork\swostar\src\Supper\Inotify.php	/^    private $wdPath       = [];$/;"	v
Config	swostar\src\Config\Config.php	/^class Config$/;"	c
__construct	swostar\src\Config\Config.php	/^    function __construct()$/;"	f
configPath	swostar\src\Config\Config.php	/^        $this->configPath = app()->getBasePath().'\/config';$/;"	v
configPath	swostar\src\Config\Config.php	/^    protected $configPath = '';$/;"	v
data	swostar\src\Config\Config.php	/^            $data = $data[$value];$/;"	v
data	swostar\src\Config\Config.php	/^        $data = $this->itmes;$/;"	v
data	swostar\src\Config\Config.php	/^        $data = null;$/;"	v
file	swostar\src\Config\Config.php	/^            if ($file === '.' || $file === '..') {$/;"	v
filename	swostar\src\Config\Config.php	/^            $filename = \\stristr($file, ".php", true);$/;"	v
files	swostar\src\Config\Config.php	/^        $files = scandir($this->configPath);$/;"	v
get	swostar\src\Config\Config.php	/^    public function get($keys)$/;"	f
itmes	swostar\src\Config\Config.php	/^        $this->itmes = $this->phpParser();$/;"	v
itmes	swostar\src\Config\Config.php	/^    protected $itmes = [];$/;"	v
key	swostar\src\Config\Config.php	/^        foreach ($files as $key => $file) {$/;"	v
key	swostar\src\Config\Config.php	/^        foreach (\\explode('.', $keys) as $key => $value) {$/;"	v
phpParser	swostar\src\Config\Config.php	/^    protected function phpParser()$/;"	f
Input	swostar\src\Console\Input.php	/^class Input$/;"	c
description	swostar\src\Console\Input.php	/^    public static function info($message, $description = null)$/;"	v
info	swostar\src\Console\Input.php	/^    public static function info($message, $description = null)$/;"	f
return	swostar\src\Console\Input.php	/^            $return = $return.\\var_export($message, true);$/;"	v
return	swostar\src\Console\Input.php	/^        $return = "======>>> ".$description." start\\n";$/;"	v
Container	swostar\src\Container\Container.php	/^class Container$/;"	c
bind	swostar\src\Container\Container.php	/^    public function bind($abstract, $object)$/;"	f
bindings	swostar\src\Container\Container.php	/^    protected $bindings = [];$/;"	v
getInstance	swostar\src\Container\Container.php	/^    public static function getInstance()$/;"	f
has	swostar\src\Container\Container.php	/^    public function has($abstract)$/;"	f
instance	swostar\src\Container\Container.php	/^    protected static $instance;$/;"	v
instances	swostar\src\Container\Container.php	/^    protected $instances = [];$/;"	v
make	swostar\src\Container\Container.php	/^    public function make($abstract, $parameters = [])$/;"	f
object	swostar\src\Container\Container.php	/^        $object = $this->bindings[$abstract];$/;"	v
parameters	swostar\src\Container\Container.php	/^    public function make($abstract, $parameters = [])$/;"	v
parameters	swostar\src\Container\Container.php	/^    public function resolve($abstract, $parameters = [])$/;"	v
resolve	swostar\src\Container\Container.php	/^    public function resolve($abstract, $parameters = [])$/;"	f
setInstance	swostar\src\Container\Container.php	/^    public static function setInstance($container = null)$/;"	f
Event	swostar\src\Event\Event.php	/^class Event$/;"	c
event	swostar\src\Event\Event.php	/^        $event = \\strtolower($event);$/;"	v
events	swostar\src\Event\Event.php	/^    protected $events = [];$/;"	v
getEvents	swostar\src\Event\Event.php	/^    public function getEvents($event = null)$/;"	f
param	swostar\src\Event\Event.php	/^    public function trigger($event, $param = [])$/;"	v
register	swostar\src\Event\Event.php	/^    public function register($event, $callback)$/;"	f
trigger	swostar\src\Event\Event.php	/^    public function trigger($event, $param = [])$/;"	f
Listener	swostar\src\Event\Listener.php	/^abstract class Listener$/;"	c
getName	swostar\src\Event\Listener.php	/^    public function getName()$/;"	f
handler	swostar\src\Event\Listener.php	/^    public abstract function handler();$/;"	f
name	swostar\src\Event\Listener.php	/^    protected $name = 'listener';$/;"	v
Application	swostar\src\Foundation\Application.php	/^class Application extends Container$/;"	c
__construct	swostar\src\Foundation\Application.php	/^    public function __construct($path = null)$/;"	f
basePath	swostar\src\Foundation\Application.php	/^        $this->basePath = \\rtrim($path, '\\\/');$/;"	v
basePath	swostar\src\Foundation\Application.php	/^    protected $basePath = "";$/;"	v
binds	swostar\src\Foundation\Application.php	/^        $binds = [$/;"	v
class	swostar\src\Foundation\Application.php	/^            $class = 'App\\\\Listener\\\\'.\\explode('.', $file)[0];$/;"	v
event	swostar\src\Foundation\Application.php	/^        $event = new Event();$/;"	v
file	swostar\src\Foundation\Application.php	/^            \/\/ $file => StartListener.php$/;"	v
file	swostar\src\Foundation\Application.php	/^            if ($file === '.' || $file === '..') {$/;"	v
files	swostar\src\Foundation\Application.php	/^        $files = scandir($this->getBasePath().'\/app\/Listener');$/;"	v
getBasePath	swostar\src\Foundation\Application.php	/^    public function getBasePath()$/;"	f
init	swostar\src\Foundation\Application.php	/^    public function init()$/;"	f
key	swostar\src\Foundation\Application.php	/^        foreach ($binds as $key => $value) {$/;"	v
key	swostar\src\Foundation\Application.php	/^        foreach ($files as $key => $file) {$/;"	v
listener	swostar\src\Foundation\Application.php	/^                $listener = new $class;$/;"	v
registerBaseBindings	swostar\src\Foundation\Application.php	/^    public function registerBaseBindings()$/;"	f
registerEvent	swostar\src\Foundation\Application.php	/^    public function registerEvent()$/;"	f
run	swostar\src\Foundation\Application.php	/^    public function run($arg)$/;"	f
server	swostar\src\Foundation\Application.php	/^            $server = new HttpServer($this);$/;"	v
server	swostar\src\Foundation\Application.php	/^            $server = new WebSocketServer($this);$/;"	v
server	swostar\src\Foundation\Application.php	/^        $server = null;$/;"	v
setBasePath	swostar\src\Foundation\Application.php	/^    public function setBasePath($path)$/;"	f
Index	swostar\src\Index.php	/^class Index$/;"	c
index	swostar\src\Index.php	/^    public function index()$/;"	f
Request	swostar\src\Message\Http\Request.php	/^class Request$/;"	c
get	swostar\src\Message\Http\Request.php	/^    public function get(){$/;"	f
getMethod	swostar\src\Message\Http\Request.php	/^    public function getMethod()$/;"	f
getUriPath	swostar\src\Message\Http\Request.php	/^    public function getUriPath()$/;"	f
init	swostar\src\Message\Http\Request.php	/^    public static function init(SwooleRequest $request)$/;"	f
input	swostar\src\Message\Http\Request.php	/^    public function input(){$/;"	f
method	swostar\src\Message\Http\Request.php	/^    protected $method;$/;"	v
post	swostar\src\Message\Http\Request.php	/^    public function post(){$/;"	f
self	swostar\src\Message\Http\Request.php	/^        $self = app('httpRequest');$/;"	v
swooleRequest	swostar\src\Message\Http\Request.php	/^    protected $swooleRequest;$/;"	v
uriPath	swostar\src\Message\Http\Request.php	/^    protected $uriPath;$/;"	v
Rpc	swostar\src\RPC\Rpc.php	/^class Rpc$/;"	c
__construct	swostar\src\RPC\Rpc.php	/^    public function __construct(Server $server, $config)$/;"	f
close	swostar\src\RPC\Rpc.php	/^    public function close($serv, $fd) {$/;"	f
connect	swostar\src\RPC\Rpc.php	/^    public function connect($serv, $fd){$/;"	f
host	swostar\src\RPC\Rpc.php	/^    protected $host ;$/;"	v
listen	swostar\src\RPC\Rpc.php	/^        $listen = $server->listen($config['host'], $config['port'], SWOOLE_SOCK_TCP);$/;"	v
port	swostar\src\RPC\Rpc.php	/^    protected $port;$/;"	v
receive	swostar\src\RPC\Rpc.php	/^    public function receive($serv, $fd, $from_id, $data) {$/;"	f
Route	swostar\src\Routes\Route.php	/^class Route$/;"	c
__construct	swostar\src\Routes\Route.php	/^    protected function __construct( )$/;"	f
action	swostar\src\Routes\Route.php	/^                $action = $value;$/;"	v
action	swostar\src\Routes\Route.php	/^        $action = null;$/;"	v
actions	swostar\src\Routes\Route.php	/^        $actions = [$/;"	v
addRoute	swostar\src\Routes\Route.php	/^    protected function addRoute($methods, $uri, $action)$/;"	f
any	swostar\src\Routes\Route.php	/^    public function any($uri, $action)$/;"	f
arr	swostar\src\Routes\Route.php	/^            $arr = \\explode("@", $action);$/;"	v
class	swostar\src\Routes\Route.php	/^            $class = new $controller();$/;"	v
controller	swostar\src\Routes\Route.php	/^            $controller = $namespace.$arr[0];$/;"	v
flag	swostar\src\Routes\Route.php	/^            $this->flag = $key;$/;"	v
flag	swostar\src\Routes\Route.php	/^        $this->flag = $flag;$/;"	v
flag	swostar\src\Routes\Route.php	/^    protected $flag = null;$/;"	v
get	swostar\src\Routes\Route.php	/^    public function get($uri, $action)$/;"	f
getInstance	swostar\src\Routes\Route.php	/^    public static function getInstance()$/;"	f
getRoutes	swostar\src\Routes\Route.php	/^    public function getRoutes()$/;"	f
instance	swostar\src\Routes\Route.php	/^    protected static $instance = null;$/;"	v
key	swostar\src\Routes\Route.php	/^        foreach ($actions as $key => $action) {$/;"	v
key	swostar\src\Routes\Route.php	/^        foreach ($this->routeMap as $key => $path) {$/;"	v
match	swostar\src\Routes\Route.php	/^    public function match($path, $param = [])$/;"	f
method	swostar\src\Routes\Route.php	/^        $this->method = $method;$/;"	v
method	swostar\src\Routes\Route.php	/^    protected $method = null;$/;"	v
namespace	swostar\src\Routes\Route.php	/^            $namespace = "\\App\\\\".$this->flag."\\Controller\\\\";$/;"	v
param	swostar\src\Routes\Route.php	/^    private function runAction($action, $param = null)$/;"	v
param	swostar\src\Routes\Route.php	/^    public function match($path, $param = [])$/;"	v
post	swostar\src\Routes\Route.php	/^    public function post($uri, $action)$/;"	f
registerRoute	swostar\src\Routes\Route.php	/^    public function registerRoute()$/;"	f
routeMap	swostar\src\Routes\Route.php	/^        $this->routeMap = [$/;"	v
routeMap	swostar\src\Routes\Route.php	/^    protected $routeMap = [];$/;"	v
routes	swostar\src\Routes\Route.php	/^    protected $routes = [];$/;"	v
runAction	swostar\src\Routes\Route.php	/^    private function runAction($action, $param = null)$/;"	f
setFlag	swostar\src\Routes\Route.php	/^    public function setFlag($flag)$/;"	f
setMethod	swostar\src\Routes\Route.php	/^    public function setMethod($method)$/;"	f
uri	swostar\src\Routes\Route.php	/^            $uri = ($uri && substr($uri,0,1)!='\/') ? "\/".$uri : $uri;$/;"	v
uri	swostar\src\Routes\Route.php	/^        foreach ($this->routes[$this->flag][$this->method] as $uri => $value) {$/;"	v
verbs	swostar\src\Routes\Route.php	/^    protected $verbs = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE'];$/;"	v
wsController	swostar\src\Routes\Route.php	/^    public function wsController($uri, $controller)$/;"	f
HttpServer	swostar\src\Server\Http\HttpServer.php	/^class HttpServer extends Server$/;"	c
createServer	swostar\src\Server\Http\HttpServer.php	/^    public function createServer()$/;"	f
httpRequest	swostar\src\Server\Http\HttpServer.php	/^        $httpRequest = HttpRequest::init($request);$/;"	v
initEvent	swostar\src\Server\Http\HttpServer.php	/^    protected function initEvent(){$/;"	f
onRequest	swostar\src\Server\Http\HttpServer.php	/^    public function onRequest(SwooleRequest $request, SwooleResponse $response)$/;"	f
return	swostar\src\Server\Http\HttpServer.php	/^        $return = app('route')->setFlag('Http')->setMethod($httpRequest->getMethod())->match($httpRequest->getUriPath());$/;"	v
swooleServer	swostar\src\Server\Http\HttpServer.php	/^        $this->swooleServer = new SwooleServer($this->host, $this->port);$/;"	v
uri	swostar\src\Server\Http\HttpServer.php	/^        $uri = $request->server['request_uri'];$/;"	v
Server	swostar\src\Server\Server.php	/^abstract class Server$/;"	c
__construct	swostar\src\Server\Server.php	/^    public function __construct(Application $app )$/;"	f
action	swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_CREATE';$/;"	v
action	swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_DELETE';$/;"	v
action	swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_MODIF';$/;"	v
action	swostar\src\Server\Server.php	/^            \/\/       $action = 'IN_MOVE';$/;"	v
action	swostar\src\Server\Server.php	/^            \/\/ $action = 'file:';$/;"	v
app	swostar\src\Server\Server.php	/^        $this->app = $app;$/;"	v
app	swostar\src\Server\Server.php	/^    protected $app ;$/;"	v
cli	swostar\src\Server\Server.php	/^        \/\/     $cli = new \\Swoole\\Coroutine\\Http\\Client('192.168.186.130', 9500);$/;"	v
config	swostar\src\Server\Server.php	/^        $config = app('config');$/;"	v
config	swostar\src\Server\Server.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	swostar\src\Server\Server.php	/^    protected $config = [$/;"	v
createServer	swostar\src\Server\Server.php	/^    protected abstract function createServer();$/;"	f
event	swostar\src\Server\Server.php	/^            foreach ($events as $event => $func) {$/;"	v
event	swostar\src\Server\Server.php	/^    protected $event = [$/;"	v
getConfig	swostar\src\Server\Server.php	/^    public function getConfig(): array$/;"	f
getHost	swostar\src\Server\Server.php	/^    public function getHost(): string$/;"	f
getPort	swostar\src\Server\Server.php	/^    public function getPort(): int$/;"	f
host	swostar\src\Server\Server.php	/^        $this->host = $config->get('http.host');$/;"	v
host	swostar\src\Server\Server.php	/^    protected $host = "0.0.0.0";$/;"	v
initEvent	swostar\src\Server\Server.php	/^    protected abstract function initEvent();$/;"	f
initSetting	swostar\src\Server\Server.php	/^    public function initSetting()$/;"	f
inotify	swostar\src\Server\Server.php	/^            $this->inotify = new Inotify($this->app->getBasePath(), $this->watchEvent());$/;"	v
inotify	swostar\src\Server\Server.php	/^    protected $inotify = null;$/;"	v
onManagerStart	swostar\src\Server\Server.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	swostar\src\Server\Server.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	swostar\src\Server\Server.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	swostar\src\Server\Server.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	swostar\src\Server\Server.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	swostar\src\Server\Server.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	swostar\src\Server\Server.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
pidFile	swostar\src\Server\Server.php	/^    protected $pidFile = "\/runtime\/swostar.pid";$/;"	v
pidMap	swostar\src\Server\Server.php	/^    protected $pidMap = [$/;"	v
port	swostar\src\Server\Server.php	/^        $this->port = $config->get('http.port');$/;"	v
port	swostar\src\Server\Server.php	/^    protected $port = 9000;$/;"	v
ret	swostar\src\Server\Server.php	/^        \/\/     $ret = $cli->upgrade("\/");$/;"	v
setConfig	swostar\src\Server\Server.php	/^    public function setConfig($config)$/;"	f
setEvent	swostar\src\Server\Server.php	/^    public function setEvent($type, $event)$/;"	f
setSwooleEvent	swostar\src\Server\Server.php	/^    protected function setSwooleEvent()$/;"	f
start	swostar\src\Server\Server.php	/^    public function start()$/;"	f
swooleServer	swostar\src\Server\Server.php	/^    protected $swooleServer;$/;"	v
type	swostar\src\Server\Server.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchEvent	swostar\src\Server\Server.php	/^    protected function watchEvent()$/;"	f
watchFile	swostar\src\Server\Server.php	/^        $this->watchFile = $watchFile;$/;"	v
watchFile	swostar\src\Server\Server.php	/^    protected $watchFile = false;$/;"	v
watchFile	swostar\src\Server\Server.php	/^    public function watchFile($watchFile)$/;"	f
Server	swostar\src\Server\Server1.php	/^abstract class Server$/;"	c
__construct	swostar\src\Server\Server1.php	/^    public function __construct(Application $app)$/;"	f
app	swostar\src\Server\Server1.php	/^        $this->app = $app;$/;"	v
config	swostar\src\Server\Server1.php	/^        $this->config = array_map($this->config, $config);$/;"	v
config	swostar\src\Server\Server1.php	/^    protected $config = [$/;"	v
createServer	swostar\src\Server\Server1.php	/^    protected abstract function createServer();$/;"	f
event	swostar\src\Server\Server1.php	/^            foreach ($events as $event => $func) {$/;"	v
event	swostar\src\Server\Server1.php	/^    protected $event = [$/;"	v
getConfig	swostar\src\Server\Server1.php	/^    public function getConfig(): array$/;"	f
getEvent	swostar\src\Server\Server1.php	/^    public function getEvent(): array$/;"	f
getHost	swostar\src\Server\Server1.php	/^    public function getHost(): string$/;"	f
getPort	swostar\src\Server\Server1.php	/^    public function getPort(): int$/;"	f
getServerType	swostar\src\Server\Server1.php	/^    public function getServerType()$/;"	f
host	swostar\src\Server\Server1.php	/^        $this->host = $host;$/;"	v
host	swostar\src\Server\Server1.php	/^    protected $host = '0.0.0.0';$/;"	v
initEvent	swostar\src\Server\Server1.php	/^    protected abstract function initEvent();$/;"	f
inotify	swostar\src\Server\Server1.php	/^    protected $inotify = null;$/;"	v
mod	swostar\src\Server\Server1.php	/^    protected $mod = SWOOLE_PROCESS;$/;"	v
onManagerStart	swostar\src\Server\Server1.php	/^    public function onManagerStart(SwooleServer $server)$/;"	f
onManagerStop	swostar\src\Server\Server1.php	/^    public function onManagerStop(SwooleServer $server)$/;"	f
onShutdown	swostar\src\Server\Server1.php	/^    public function onShutdown(SwooleServer $server)$/;"	f
onStart	swostar\src\Server\Server1.php	/^    public function onStart(SwooleServer $server)$/;"	f
onWorkerError	swostar\src\Server\Server1.php	/^    public function onWorkerError(SwooleServer $server, int $workerId, int $workerPid, int $exitCode, int $signal)$/;"	f
onWorkerStart	swostar\src\Server\Server1.php	/^    public function onWorkerStart(SwooleServer $server, int $worker_id)$/;"	f
onWorkerStop	swostar\src\Server\Server1.php	/^    public function onWorkerStop(SwooleServer $server, int $worker_id)$/;"	f
pidFile	swostar\src\Server\Server1.php	/^    protected $pidFile = "\/runtime\/swostar.pid";$/;"	v
pidMap	swostar\src\Server\Server1.php	/^    protected $pidMap = [$/;"	v
port	swostar\src\Server\Server1.php	/^        $this->port = $port;$/;"	v
port	swostar\src\Server\Server1.php	/^    protected $port = 9000;$/;"	v
serverType	swostar\src\Server\Server1.php	/^        $this->serverType = $serverType;$/;"	v
serverType	swostar\src\Server\Server1.php	/^    protected $serverType = 'TCP';$/;"	v
setConfig	swostar\src\Server\Server1.php	/^    public function setConfig($config)$/;"	f
setEvent	swostar\src\Server\Server1.php	/^    public function setEvent($type, $event)$/;"	f
setHost	swostar\src\Server\Server1.php	/^    public function setHost($host)$/;"	f
setPort	swostar\src\Server\Server1.php	/^    public function setPort($port)$/;"	f
setServerType	swostar\src\Server\Server1.php	/^    public function setServerType($serverType)$/;"	f
setSwooleEvent	swostar\src\Server\Server1.php	/^    protected function setSwooleEvent()$/;"	f
setWatchFile	swostar\src\Server\Server1.php	/^    public function setWatchFile($watch)$/;"	f
sock_type	swostar\src\Server\Server1.php	/^    protected $sock_type = SWOOLE_SOCK_TCP;$/;"	v
start	swostar\src\Server\Server1.php	/^    public function start()$/;"	f
swooleServer	swostar\src\Server\Server1.php	/^    protected $swooleServer;$/;"	v
type	swostar\src\Server\Server1.php	/^        foreach ($this->event as $type => $events) {$/;"	v
watchEvent	swostar\src\Server\Server1.php	/^    public function watchEvent()$/;"	f
watchFile	swostar\src\Server\Server1.php	/^        $this->watchFile = $watch;$/;"	v
watchFile	swostar\src\Server\Server1.php	/^    protected $watchFile = false;$/;"	v
Connections	swostar\src\Server\WebSocket\Connections.php	/^class Connections$/;"	c
connections	swostar\src\Server\WebSocket\Connections.php	/^    protected static $connections = [];$/;"	v
del	swostar\src\Server\WebSocket\Connections.php	/^    public static function del($fd)$/;"	f
get	swostar\src\Server\WebSocket\Connections.php	/^    public static function get($fd)$/;"	f
init	swostar\src\Server\WebSocket\Connections.php	/^    public static function init($fd, $path)$/;"	f
WebSocketServer	swostar\src\Server\WebSocket\WebSocketServer.php	/^class WebSocketServer extends HttpServer$/;"	c
createServer	swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function createServer()$/;"	f
initEvent	swostar\src\Server\WebSocket\WebSocketServer.php	/^    protected function initEvent(){$/;"	f
onClose	swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onClose($ser, $fd) {$/;"	f
onMessage	swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onMessage(SwooleServer $server, $frame) {$/;"	f
onOpen	swostar\src\Server\WebSocket\WebSocketServer.php	/^    public function onOpen(SwooleServer $server, $request) {$/;"	f
path	swostar\src\Server\WebSocket\WebSocketServer.php	/^        $path = (Connections::get($fd))['path'];$/;"	v
path	swostar\src\Server\WebSocket\WebSocketServer.php	/^        $path = (Connections::get($frame->fd))['path'];$/;"	v
return	swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('close')->match($path, [$server, $fd]);$/;"	v
return	swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('message')->match($path, [$server, $frame]);$/;"	v
return	swostar\src\Server\WebSocket\WebSocketServer.php	/^        $return = app('route')->setFlag('WebSocket')->setMethod('open')->match($request->server['path_info'], [$server, $request]);$/;"	v
swooleServer	swostar\src\Server\WebSocket\WebSocketServer.php	/^        $this->swooleServer = new SwooleServer($this->host, $this->port);$/;"	v
app	swostar\src\Supper\Helper.php	/^    function app($a = null)$/;"	f
dd	swostar\src\Supper\Helper.php	/^    function dd($message, $description = null)$/;"	f
description	swostar\src\Supper\Helper.php	/^    function dd($message, $description = null)$/;"	v
Inotify	swostar\src\Supper\Inotify.php	/^class Inotify$/;"	c
__construct	swostar\src\Supper\Inotify.php	/^    public function __construct($watchPath, callable $watchHandler, $watchMask = IN_CREATE | IN_DELETE | IN_MODIFY | IN_MOVE)$/;"	f
__destruct	swostar\src\Supper\Inotify.php	/^    public function __destruct()$/;"	f
_watch	swostar\src\Supper\Inotify.php	/^    protected function _watch($path)$/;"	f
addFileType	swostar\src\Supper\Inotify.php	/^    public function addFileType($type)$/;"	f
addFileTypes	swostar\src\Supper\Inotify.php	/^    public function addFileTypes(array $types)$/;"	f
bind	swostar\src\Supper\Inotify.php	/^    protected function bind($wd, $path)$/;"	f
clearWatch	swostar\src\Supper\Inotify.php	/^    protected function clearWatch()$/;"	f
doing	swostar\src\Supper\Inotify.php	/^                    $this->doing = false;$/;"	v
doing	swostar\src\Supper\Inotify.php	/^                $this->doing = true;$/;"	v
doing	swostar\src\Supper\Inotify.php	/^    private $doing        = false;$/;"	v
events	swostar\src\Supper\Inotify.php	/^            $events = inotify_read($fp);$/;"	v
fd	swostar\src\Supper\Inotify.php	/^        $this->fd = inotify_init();$/;"	v
fd	swostar\src\Supper\Inotify.php	/^    private $fd;$/;"	v
file	swostar\src\Supper\Inotify.php	/^                $file = $path . DIRECTORY_SEPARATOR . $file;$/;"	v
file	swostar\src\Supper\Inotify.php	/^                if ($file === '.' || $file === '..') {$/;"	v
fileType	swostar\src\Supper\Inotify.php	/^                $fileType = strchr($event['name'], '.');$/;"	v
fileTypes	swostar\src\Supper\Inotify.php	/^    private $fileTypes    = [$/;"	v
files	swostar\src\Supper\Inotify.php	/^            $files = scandir($path);$/;"	v
getWatchedFileCount	swostar\src\Supper\Inotify.php	/^    public function getWatchedFileCount()$/;"	f
path	swostar\src\Supper\Inotify.php	/^    protected function unbind($wd, $path = null)$/;"	v
pathWd	swostar\src\Supper\Inotify.php	/^        $this->pathWd = [];$/;"	v
pathWd	swostar\src\Supper\Inotify.php	/^    private $pathWd       = [];$/;"	v
start	swostar\src\Supper\Inotify.php	/^    public function start()$/;"	f
stop	swostar\src\Supper\Inotify.php	/^    public function stop()$/;"	f
type	swostar\src\Supper\Inotify.php	/^        $type = '.' . trim($type, '.');$/;"	v
unbind	swostar\src\Supper\Inotify.php	/^    protected function unbind($wd, $path = null)$/;"	f
watch	swostar\src\Supper\Inotify.php	/^    public function watch()$/;"	f
watchHandler	swostar\src\Supper\Inotify.php	/^        $this->watchHandler = $watchHandler;$/;"	v
watchHandler	swostar\src\Supper\Inotify.php	/^    private $watchHandler;$/;"	v
watchMask	swostar\src\Supper\Inotify.php	/^        $this->watchMask = $watchMask;$/;"	v
watchMask	swostar\src\Supper\Inotify.php	/^    private $watchMask;$/;"	v
watchMask	swostar\src\Supper\Inotify.php	/^    public function __construct($watchPath, callable $watchHandler, $watchMask = IN_CREATE | IN_DELETE | IN_MODIFY | IN_MOVE)$/;"	v
watchPath	swostar\src\Supper\Inotify.php	/^        $this->watchPath = $watchPath;$/;"	v
watchPath	swostar\src\Supper\Inotify.php	/^    private $watchPath;$/;"	v
wd	swostar\src\Supper\Inotify.php	/^            $wd = inotify_add_watch($this->fd, $path, $this->watchMask);$/;"	v
wd	swostar\src\Supper\Inotify.php	/^        $wd = inotify_add_watch($this->fd, $path, $this->watchMask);$/;"	v
wd	swostar\src\Supper\Inotify.php	/^        foreach ($this->wdPath as $wd => $path) {$/;"	v
wdPath	swostar\src\Supper\Inotify.php	/^        $this->wdPath = [];$/;"	v
wdPath	swostar\src\Supper\Inotify.php	/^    private $wdPath       = [];$/;"	v
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
